[
  {
    "practice_name": "practice_main",
    "text": "0) practice_preparation, 1) practice_security_and_privacy, 2) practice_protocols_and_documents, 3) practice_security_levels, 4) practice_metrics_and_standards, 5) practice_assess_the_potential_product, 6) practice_security_risks, 7) practice_validated_sdl_tools, 8) practice_sast, 9) practice_dast, 10) practice_penetration_testing, 11) practice_standard_incident_response_processes"
  },
  {
    "practice_name": "practice_preparation",
    "text": "Как частные, так и государственные организации должны инициировать компетентные программы по обучению своих сотрудников. Работникам следует понимать тот факт, что над безопасностью необходимо работать каждому из них, а не отдельным личностям. Все участники проекта, такие как разработчики программного обеспечения, тестировщики, программисты, сервисные инженеры, руководитель группы, менеджер по продажам и директор, должны унаследовать основные концепции безопасности приложения, чтобы понимать, как обеспечить защиту своего продукта. Продукт, в свою очередь, должен соответствовать отраслевым стандартам и отвечать всем требованиям заказчика и протоколам поставки."
  },
  {
    "practice_name": "practice_security_and_privacy",
    "text": "На этом этапе выполнения требований к созданию продукта крайне важно рассмотреть его «безопасность и конфиденциальность (S&P)». Это поможет самому специалисту и всей организации понять фундаментальные элементы разработки безопасных приложений. Безопасность в SDLC подобна поливу растений, требующим постоянной заботы. Изменения в практике защиты и противодействий возникающим угрозам должны регулярно осуществляться. Чем больше человек успеет исправить на ранних стадиях, тем меньше головной боли ждет его в будущем (минимизация сбоев / проблем безопасности / финансовых и временных затрат). Итак, стоит выполнить следующие требования для улучшения S&P в соответствии с нуждами бизнеса."
  },
  {
    "practice_name": "practice_protocols_and_documents",
    "text": "В процессе проектирования следует создать и визуализировать план того, как проект будет реализован на протяжении всего внедрения SDL. Специалисту нужно использовать лучшие практики в отрасли, протоколы, инструменты. Он также документирует определенные угрозы и уязвимости, обнаруженные в приложении. Важно рассмотреть проектные спецификации: как можно реализовать все функциональные возможности программы в рамках безопасности. Это делается очень внимательно: каждая часть данных просматривается и обрабатывается криптографически."
  },
  {
    "practice_name":"practice_security_levels",
    "text": "В процессе проектирования следует создать и визуализировать план того, как проект будет реализован на протяжении всего внедрения SDL. Специалисту нужно использовать лучшие практики в отрасли, протоколы, инструменты. Он также документирует определенные угрозы и уязвимости, обнаруженные в приложении. Важно рассмотреть проектные спецификации: как можно реализовать все функциональные возможности программы в рамках безопасности. Это делается очень внимательно: каждая часть данных просматривается и обрабатывается криптографически."
  },
  {
    "practice_name": "practice_metrics_and_standards",
    "text": "На этом этапе участники проекта определяют вопросы безопасности, связанные с системами оценки рисков, такими как установление контекста, идентификация, анализ, оценка и обработка. Это поможет пользователю найти и исправить проблемы в защите, а также обезопасить свое приложение от возможных ошибок. Используя матрицу оценки риска (критический, высокий, средний или низкий уровень), специалист может понять уровень опасности. Нужно убедиться, что инструменты отчетности об имеющихся багах могут выявлять проблемы безопасности. Следует подготовить базу данных, которая может быть динамически запрошена в любое время для поиска всех ошибок безопасности. Кроме этого, надо определить и задокументировать набор критериев для панели ошибок безопасности проекта. Когда советник по безопасности ставит высокую планку для уровня безопасности приложения, проектная группа должна провести переговоры о имеющейся панели ошибок и возможной ее модернизации."
  },
  {
    "practice_name": "practice_assess_the_potential_product",
    "text": "Важные моменты, которые следует учитывать при анализе рисков, включают в себя следующее пункты: Угрозы и уязвимости, существующие в среде проекта. Очень важно тщательно анализировать любой внешний код, полученный из других источников. Когда команда не знает полной информации о коде, скорее всего, это приведет к уязвимостям в безопасности. Проекты с высокой степенью риска (Р1), включая все уязвимости и проблемы конфиденциальности, следует обсудить с экспертом по вопросам конфиденциальности (SME)."
  },
  {
    "practice_name": "practice_security_risks",
    "text": "Как в государственном, так и в частном секторе большинство программных проектов создается с использованием сторонних компонентов и инструментов с открытым исходным кодом.\n\nТаким образом, уязвимости распространяются по организации быстрее, чем когда-либо прежде. Используя коммерческие и некоммерческие коды, специалист должен понимать, что подбор инструментов имеет решающее значение для успешного безопасного SDL.\n\nНеобходимые компоненты находятся под контролем в современных проектах. В них может входить что угодно: начиная с программного обеспечения с открытым исходным кодом и заканчивая операционными системами."
  },
  {
    "practice_name": "practice_validated_sdl_tools",
    "text": "Это один из важных этапов в Secure SDLC. Нужно определить и утвердить список инструментов, а также определиться с такими элементами, как компилятор, связанные уведомления и предупреждения. Специалисты используют проверенные версии новейших инструментов."
  },
  {
    "practice_name": "practice_sast",
    "text": "На этапе верификации основной задачей инженеров-программистов является обеспечение соответствия написанных кодов определенным требованиям конфиденциальности и безопасности на предыдущих этапах. Инженеры анализируют исходный код перед любыми компиляциями, что обеспечивает масштабируемость, а также гарантирует, что команда смогла создать код, который соответствует политике кодирования.\n\nОптимальная частота выполнения SAST должна быть обсуждена с командой для выявления всех уязвимостей в программном пакете. При осуществлении данного процесса можно сбалансировать производительность и безопасность приложения.\n\nНужно понимать, что тестирование конфиденциальности и безопасности затрагивает триаду «Confidentiality, integrity, and availability (CIA)», касающуюся программного обеспечения и данных, которые оно обрабатывает."
  },
  {
    "practice_name": "practice_dast",
    "text": "Инструменты DAST специально отслеживают поведение приложения, которое связано с повреждением памяти, проблемами с привилегиями пользователей и другими критическими проблемами безопасности.\n\nОпять же, как и в случае с инструментами SAST, не существует универсального решения. В то время как некоторые программы, такие как инструменты сканирования веб-приложений, могут быть более легко интегрированы в конвейер CI/CD, другие процессы DAST, такие как фаззинг, требуют иного подхода. Разумно выполнить «фаззинг черного ящика», что значительно облегчит работу, поскольку не требует постоянного контроля над исходным кодом."
  },
  {
    "practice_name": "practice_penetration_testing",
    "text": "Тестирование на проникновение – это авторизованная имитационная задача, часто выполняемая совместно с компьютерной системой, приложениями или сетью пользователя для оценки состояния безопасности системы. Целью тестирования на проникновение является выявление существующих или новых потенциальных уязвимостей, возникающих в результате ошибок кодирования, сбоев конфигурации системы или других слабых мест развертывания приложения."
  },
  {
    "practice_name": "practice_standard_incident_response_processes",
    "text": "Организациям следует создать план реагирования на инциденты (IRP) вместе со специальной группой реагирования на инциденты безопасности продуктов своей организации (PSIRT). Этот план должен включать в себя «командира инцидента» с POC. В случае чрезвычайной ситуации он сможет установить внутренний аварийный протокол для обслуживания нужд приложения. План реагирования на инциденты (IRP) должен быть протестирован и развернут до возникновения чрезвычайной ситуации."
  }
]